/**
 * # 1 # типы данных, литералы и операции над ними
 * byte -> short -> int -> long -> float -> double
 *
 */

public class TypesDemo {
    public static void main(String[] args) {

        int k1 = 5;
        byte k2 = (byte) k1; // преобразование int в byte

        byte b = 1, b1 = 1 + 2;
        final byte B = 1 + 2;
        //b = b1 + 1; // ошибка приведения типов int в byte
        /* переменная b1 на момент выполнения кода b = b1 + 1; может измениться, и выражение b1 + 1
        может превысить допустимый размер byte- типа */
        b = (byte) (b1 + 1);
        b = B + 1; // работает
        /* B - константа, ее значение определено, компилятор вычисляет значение выражения B + 1,
        и если его размер не превышает допустимого для byte типа, то ошибка не возникает */
        //b = -b; // ошибка приведения типов
        b = (byte) -b;
        //b = +b; // ошибка приведения типов
        b = (byte) +b;
        int i = 3;
        //b = i; // ошибка приведения типов, int больше, чем byte
        b = (byte) i;
        final int D = 3;
        b = D; // работает
        /* D –константа. Компилятор проверяет, не превышает ли ее значение допустимый размер для
        типа byte, если не превышает, то ошибка не возникает */
        final int D2 = 129;
        //b=D2; // ошибка приведения типов, т.к. 129 больше, чем допустимое 127
        b = (byte) D2;
        b += i++; // работает
        b += 1000; // работает
        b1 *= 2; // работает
        float f = 1.1f;
        b /= f; // работает
        /* все сокращенные операторы автоматически преобразуют результат выражения к типу переменной,
        которой присваивается это значение. Например, b /= f; равносильно b = (byte)(b / f); */
    }
}
